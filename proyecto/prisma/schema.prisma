generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ciudad {
  nombre                             String      @id @db.VarChar(100)
  discoteca_discoteca_ciudadTociudad discoteca[] @relation("discoteca_ciudadTociudad")
  usuario_usuario_ciudadTociudad     usuario[]   @relation("usuario_ciudadTociudad")
}

model discoteca {
  nombre                                    String        @db.VarChar(100)
  ciudad                                    String        @db.VarChar(100)
  gestor                                    String?       @db.VarChar(100)
  calificacion                              Decimal?      @db.Decimal(10, 2)
  n_reviews                                 Int?
  aforo                                     Int?
  ciudad_discoteca_ciudadTociudad           ciudad        @relation("discoteca_ciudadTociudad", fields: [ciudad], references: [nombre], onDelete: NoAction, onUpdate: NoAction)
  gestor_local                              gestor_local? @relation(fields: [gestor], references: [correo], onDelete: NoAction, onUpdate: NoAction)
  evento_evento_discoteca_ciudadTodiscoteca evento[]      @relation("evento_discoteca_ciudadTodiscoteca")
  puntua_puntua_discoteca_ciudadTodiscoteca puntua[]      @relation("puntua_discoteca_ciudadTodiscoteca")

  @@id([nombre, ciudad])
}

model evento {
  nombre                                                        String        @db.VarChar(100)
  discoteca                                                     String        @db.VarChar(100)
  ciudad                                                        String        @db.VarChar(100)
  fecha                                                         DateTime      @db.Date
  n_existencias                                                 Int?
  marca                                                         String?       @db.VarChar(100)
  discoteca_evento_discoteca_ciudadTodiscoteca                  discoteca     @relation("evento_discoteca_ciudadTodiscoteca", fields: [discoteca, ciudad], references: [nombre, ciudad], onDelete: NoAction, onUpdate: NoAction)
  tipoentrada_tipoentrada_evento_discoteca_ciudad_fechaToevento tipoentrada[] @relation("tipoentrada_evento_discoteca_ciudad_fechaToevento")

  @@id([nombre, discoteca, ciudad, fecha])
}

model gestor_local {
  nombre_usuario String?     @db.VarChar(100)
  correo         String      @id @db.VarChar(100)
  password       String?     @db.VarChar(100)
  discoteca      discoteca[]
}

model posee {
  entrada           String      @db.VarChar(100)
  evento            String      @db.VarChar(100)
  discoteca         String      @db.VarChar(100)
  ciudad            String      @db.VarChar(100)
  fecha             DateTime    @db.Date
  nombre_usuario    String      @db.VarChar(100)
  seguro_devolucion Boolean?
  tipoentrada       tipoentrada @relation(fields: [entrada, evento, discoteca, ciudad, fecha], references: [nombre, evento, discoteca, ciudad, fecha], onDelete: NoAction, onUpdate: NoAction)
  usuario           usuario     @relation(fields: [nombre_usuario], references: [correo], onDelete: NoAction, onUpdate: NoAction)

  @@id([entrada, evento, discoteca, ciudad, fecha, nombre_usuario])
}

model puntua {
  discoteca                                    String    @db.VarChar(100)
  ciudad                                       String    @db.VarChar(100)
  nombre_usuario                               String    @db.VarChar(100)
  calificacion                                 Decimal?  @db.Decimal(10, 2)
  discoteca_puntua_discoteca_ciudadTodiscoteca discoteca @relation("puntua_discoteca_ciudadTodiscoteca", fields: [discoteca, ciudad], references: [nombre, ciudad], onDelete: NoAction, onUpdate: NoAction)
  usuario                                      usuario   @relation(fields: [nombre_usuario], references: [correo], onDelete: NoAction, onUpdate: NoAction)

  @@id([discoteca, ciudad, nombre_usuario])
}

model tipoentrada {
  nombre                                                   String   @db.VarChar(100)
  evento                                                   String   @db.VarChar(100)
  discoteca                                                String   @db.VarChar(100)
  ciudad                                                   String   @db.VarChar(100)
  fecha                                                    DateTime @db.Date
  n_existencias                                            Int?
  precio                                                   Decimal? @db.Decimal(10, 2)
  n_max_existencias                                        Int?
  posee                                                    posee[]
  evento_tipoentrada_evento_discoteca_ciudad_fechaToevento evento   @relation("tipoentrada_evento_discoteca_ciudad_fechaToevento", fields: [evento, discoteca, ciudad, fecha], references: [nombre, discoteca, ciudad, fecha], onDelete: NoAction, onUpdate: NoAction)

  @@id([nombre, evento, discoteca, ciudad, fecha])
}

model usuario {
  nombre_usuario                String?  @db.VarChar(100)
  ciudad                        String?  @db.VarChar(100)
  password                      String?  @db.VarChar(100)
  correo                        String   @id @db.VarChar(100)
  posee                         posee[]
  puntua                        puntua[]
  ciudad_usuario_ciudadTociudad ciudad?  @relation("usuario_ciudadTociudad", fields: [ciudad], references: [nombre], onDelete: NoAction, onUpdate: NoAction)
}
